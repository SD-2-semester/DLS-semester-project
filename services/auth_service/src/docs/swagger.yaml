definitions:
  main.APIError:
    properties:
      error:
        type: string
    type: object
  main.APISuccess:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  main.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  main.DefaultCreatedResponse:
    properties:
      id:
        type: string
    type: object
  main.LoginEmailRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  main.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is a simple auth service.
  title: API
  version: "1.0"
paths:
  /api/v1/auth/login-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.LoginEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.APIError'
      summary: Login with email and password
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.DefaultCreatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.APIError'
      summary: Register a new user
      tags:
      - auth
  /api/v1/health:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.APISuccess'
      summary: Health check
      tags:
      - health
  /api/v1/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.UserResponse'
            type: array
      summary: Get all users
      tags:
      - users
  /api/v1/users/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.APIError'
      summary: Get user by ID
      tags:
      - users
  /api/v1/users/me:
    delete:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.APISuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete current user
      tags:
      - users
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get current user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
