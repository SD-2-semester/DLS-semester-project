version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: chat_service:${CHAT_SERVICE_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      postgresql-master:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      CHAT_SERVICE_HOST: 0.0.0.0
      # postgres
      CHAT_SERVICE_PG_HOST: postgresql-master
      CHAT_SERVICE_PG_PORT: 5432
      CHAT_SERVICE_PG_USER: chat_service
      CHAT_SERVICE_PG_PASSWORD: chat_service
      CHAT_SERVICE_PG_BASE: chat_service
      # postgres read only
      CHAT_SERVICE_PG_RO_HOST: postgresql-slave
      CHAT_SERVICE_PG_RO_PORT: 5432
      CHAT_SERVICE_PG_RO_USER: repl_user
      CHAT_SERVICE_PG_RO_PASSWORD: repl_user
      CHAT_SERVICE_PG_RO_BASE: chat_service_repl
      CHAT_SERVICE_PG_RO_DATABASE: chat_service
      # redis
      CHAT_SERVICE_REDIS_HOST: chat_service-redis

  postgresql-master:
    image: docker.io/bitnami/postgresql:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - chat_service-db-data:/var/lib/postgresql/data
    environment:
      POSTGRESQL_PGAUDIT_LOG: READ,WRITE
      POSTGRESQL_LOG_HOSTNAME: true
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_user
      POSTGRESQL_USERNAME: chat_service
      POSTGRESQL_PASSWORD: chat_service
      POSTGRESQL_DATABASE: chat_service
      ALLOW_EMPTY_PASSWORD: yes
    healthcheck:
      test: pg_isready -U chat_service
      interval: 2s
      timeout: 3s
      retries: 40

  postgresql-slave:
    image: docker.io/bitnami/postgresql:latest
    restart: always
    ports:
      - "5433:5432"
    depends_on:
      - postgresql-master
    environment:
      POSTGRESQL_USERNAME: chat_service_repl
      POSTGRESQL_PASSWORD: chat_service_repl
      POSTGRESQL_MASTER_HOST: postgresql-master
      POSTGRESQL_PGAUDIT_LOG: READ,WRITE
      POSTGRESQL_LOG_HOSTNAME: true
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_user
      POSTGRESQL_MASTER_PORT_NUMBER: 5432


  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: bitnami/redis:7.0.12
    hostname: chat_service-redis
    container_name: chat_service-redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - 9200:9200
    volumes:
      - es-data-elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  chat_service-db-data:
    name: chat_service-db-data
  es-data-elasticsearch:
  rabbitmq_data:
  
