version: '3.9'

services:
  api: &main_app
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: chat_service:${CHAT_SERVICE_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      CHAT_SERVICE_HOST: 0.0.0.0
      # postgres read only
      CHAT_SERVICE_PG_RO_HOST: chat_service-db
      CHAT_SERVICE_PG_RO_PORT: 5432
      CHAT_SERVICE_PG_RO_USER: chat_service
      CHAT_SERVICE_PG_RO_PASS: chat_service
      CHAT_SERVICE_PG_RO_BASE: chat_service
      # postgres 
      CHAT_SERVICE_PG_HOST: chat_service-db
      CHAT_SERVICE_PG_PORT: 5432
      CHAT_SERVICE_PG_USER: chat_service
      CHAT_SERVICE_PG_PASS: chat_service
      CHAT_SERVICE_PG_BASE: chat_service
      # rabbitmq
      CHAT_SERVICE_RABBIT_HOST: chat_service-rmq
      # redis
      CHAT_SERVICE_REDIS_HOST: chat_service-redis

  db:
    image: postgres:13.8-bullseye
    hostname: chat_service-db
    environment:
      POSTGRES_PASSWORD: chat_service
      POSTGRES_USER: chat_service
      POSTGRES_DB: chat_service
    volumes:
      - chat_service-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U chat_service
      interval: 2s
      timeout: 3s
      retries: 40
    ports:
    - "5433:5432"


  rabbitmq:
    image: rabbitmq:3-management
    hostname: "chat_service-rmq"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
      RABBITMQ_DEFAULT_VHOST: "/"
    healthcheck:
      test: rabbitmq-diagnostics check_running -q
      interval: 3s
      timeout: 3s
      retries: 50

  redis:
    image: bitnami/redis:7.0.12
    hostname: chat_service-redis
    container_name: chat_service-redis
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - 9200:9200
    volumes:
      - "es-data-elasticsearch:/usr/share/elasticsearch/data"

    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 120
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    

volumes:

  chat_service-db-data:
    name: chat_service-db-data
  es-data-elasticsearch:
