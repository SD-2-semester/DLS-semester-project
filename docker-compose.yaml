version: "3.9"
services:
  # Relation Service
  app:
    container_name: relation_service
    build:
      context: ./services/relation_service
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
      NEO4J_DB: neo4j
      AMQP_USER: user
      AMQP_PASSWORD: password
      AMQP_HOST: rabbitmq
      AMQP_PORT: 5672
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - neo4j
      - rabbitmq
    volumes:
      - ./services/relation_service:/relation_service
    # command: cargo watch -x run

  # neo4j
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    environment:
      NEO4J_AUTH: neo4j/password
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "neo4j status || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: always
    depends_on:
      - rabbitmq

  # Auth Service
  auth-service:
    build:
      context: ./services/auth_service
      dockerfile: Dockerfile
      target: dev
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - auth-db
      - rabbitmq
    environment:
      AUTHSERVICE_HOST: 0.0.0.0
      # Database Read
      AUTHSERVICE_RO_DB_HOST: auth-db
      AUTHSERVICE_RO_DB_PORT: 5432
      AUTHSERVICE_RO_DB_USER: auth
      AUTHSERVICE_RO_DB_PASSWORD: auth
      AUTHSERVICE_RO_DB_NAME: auth
      # Database Write
      AUTHSERVICE_WO_DB_HOST: auth-db
      AUTHSERVICE_WO_DB_PORT: 5432
      AUTHSERVICE_WO_DB_USER: auth
      AUTHSERVICE_WO_DB_PASSWORD: auth
      AUTHSERVICE_WO_DB_NAME: auth
      # RabbitMQ
      AUTHSERVICE_RABBITMQ_HOST: rabbitmq
      AUTHSERVICE_RABBITMQ_PORT: 5672
      AUTHSERVICE_RABBITMQ_USER: user
      AUTHSERVICE_RABBITMQ_PASSWORD: password

  auth-db:
    image: postgres:16
    container_name: auth-db
    environment:
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: auth
      POSTGRES_DB: auth
      POSTGRES_HOST: auth-db
    ports:
      - 5433:5432
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U auth
      interval: 2s
      timeout: 3s
      retries: 40

  # Misc
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672" # RabbitMQ server
      - "15672:15672" # Management console
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  neo4j-plugins:
  rabbitmq_data:
  auth-db-data:
